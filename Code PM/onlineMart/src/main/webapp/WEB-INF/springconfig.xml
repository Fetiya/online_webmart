<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <aop:aspectj-autoproxy/>
 
   
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
     	

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" 
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties" ref="hibernateProperties" />
        
        <!-- OR mapping files. -->
        <property name="packagesToScan" value="edu.mum.cs490.smartmart.domain"/>        
    </bean>

    <bean id="beanValidationEventListener" class="org.hibernate.cfg.beanvalidation.BeanValidationEventListener">  
        <constructor-arg index="0" ref="validator" />  
        <constructor-arg index="1">  
            <props/>  
        </constructor-arg>  
    </bean>  

    <!-- the datasource -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/smartmart" />
        <property name="username" value="root" />
        <property name="password" value="root" />
    </bean>

    <!-- hibernate Properties -->
    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect
                </prop>
                <prop key="connection.pool_size">1</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
    </bean>
    
    <!-- Transuction Manager -->
    <tx:annotation-driven transaction-manager="txManager" />
    <bean id="txManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    
    
    <!-- DAO's setter injections -->    
    <bean id="hibernateDAO" class="edu.mum.cs490.smartmart.dao.GenericDAOImpl" abstract="true">
        <property name="sf" ref="sessionFactory"/>
    </bean>    
    <bean id="userDAO" class="edu.mum.cs490.smartmart.dao.impl.UserDAOImpl" parent="hibernateDAO">     
    </bean>    
    <bean id="vendorDAO" class="edu.mum.cs490.smartmart.dao.impl.VendorDAOImpl" parent="hibernateDAO">       
    </bean>
    <bean id="customerDAO" class="edu.mum.cs490.smartmart.dao.impl.CustomerDAOImpl" parent="hibernateDAO">       
    </bean>
    <bean id="productCategoryDAO" class="edu.mum.cs490.smartmart.dao.impl.ProductCategoryDAOImpl" parent="hibernateDAO">
    </bean>    
    <bean id="subscriptionRuleDAO" class="edu.mum.cs490.smartmart.dao.impl.SubscriptionRuleDAOImpl" parent="hibernateDAO">
    </bean>    
    <bean id="productDAO" class="edu.mum.cs490.smartmart.dao.impl.ProductDAOImpl" parent="hibernateDAO">
    </bean>    
    <bean id="shoppingcartDAO" class="edu.mum.cs490.smartmart.dao.impl.ShoppingCartItemDAOImpl" parent="hibernateDAO">
    </bean>    
        
    <bean id="orderDAO" class="edu.mum.cs490.smartmart.dao.impl.OrderDAOImpl" parent="hibernateDAO">
    </bean>
    
    <bean id="salesDetailDAO" class="edu.mum.cs490.smartmart.dao.impl.SalesDetailDAOImpl" parent="hibernateDAO">
    </bean>
    
    <bean id="settingsDAO" class="edu.mum.cs490.smartmart.dao.impl.SettingsDAOImpl" parent="hibernateDAO">
    </bean>
    <!-- service injection -->

    <bean id="userService" class="edu.mum.cs490.smartmart.serviceImpl.UserSerivceImpl">
        <property name="userDAO" ref="userDAO" />
    </bean>
    <bean  id="vendorService" class="edu.mum.cs490.smartmart.serviceImpl.VendorServiceImpl">        
        <property name="vendorDAO" ref="vendorDAO" />
        <property  name="encryptionService" ref="encryptionService" />
    </bean>
    <bean id="customerService" class="edu.mum.cs490.smartmart.serviceImpl.CustomerServiceImpl">
        <property name="customerDAO" ref="customerDAO" />
        <property  name="encryptionService" ref="encryptionService" />
    </bean> 
    <bean id="categoryService" class="edu.mum.cs490.smartmart.serviceImpl.ProductCategoryServiceImpl">
        <property name="productCategoryDAO" ref="productCategoryDAO" />
    </bean> 
    <bean id="subscriptionRuleService" class="edu.mum.cs490.smartmart.serviceImpl.SubscriptionRuleServiceImpl">
        <property name="subscriptionRuleDAO" ref="subscriptionRuleDAO" />
    </bean>    
    <bean id="productService" class="edu.mum.cs490.smartmart.serviceImpl.ProductServiceImpl">
        <property name="productDAO" ref="productDAO"/>
        <property name="productCategoryDAO" ref="productCategoryDAO"/>
        <property name="vendorDAO" ref="vendorDAO"/>       
    </bean>
    <bean id="shoppingCartService" class="edu.mum.cs490.smartmart.serviceImpl.ShoppingCartServiceImpl">
        <property name="shoppingcartDAO" ref="shoppingcartDAO" />
    </bean>
    <bean id="encryptionService" class="edu.mum.cs490.smartmart.serviceImpl.EncryptionServiceImpl">
    </bean>
    <bean id="orderService" class="edu.mum.cs490.smartmart.serviceImpl.OrderServiceImpl">
        <property name="orderDAO" ref="orderDAO"/> 
    </bean>
    
    <bean id="salesDetailService" class="edu.mum.cs490.smartmart.serviceImpl.SalesDetailServiceImpl">
        <property name="salesDetailDAO" ref="salesDetailDAO"/> 
    </bean>
    <bean id="settingsService" class="edu.mum.cs490.smartmart.serviceImpl.SettingsServiceImpl">
        <property name="settingsDAO" ref="settingsDAO"/> 
    </bean>
    
    
    
    
    
    <!-- Spring Security-->
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />
    <sec:global-method-security secured-annotations="enabled"/>
    <sec:http auto-config="true">
        <sec:intercept-url pattern="/resources/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY"/>        
        <sec:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/loginFail" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/notFound" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/index" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <!--<sec:intercept-url pattern="/contact-us" access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->
        
        <sec:intercept-url pattern="/addCustomer" access="IS_AUTHENTICATED_ANONYMOUSLY" method="GET"/>
        <sec:intercept-url pattern="/customerRegisteration" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/vendorRegisteration" access="IS_AUTHENTICATED_ANONYMOUSLY"/>        
        <sec:intercept-url pattern="/cart" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/checkout" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        
        <!--        <sec:intercept-url pattern="/addProductCategory**" access="ROLE_CUSTOMER" />
        <sec:intercept-url pattern="/addProductCategory**" access="ROLE_CUSTOMER" />
        <sec:intercept-url pattern="/addProductCategory**" access="ROLE_CUSTOMER" />
        <sec:intercept-url pattern="/addProductCategory**" access="ROLE_CUSTOMER" />
        <sec:intercept-url pattern="/addProductCategory**" access="ROLE_CUSTOMER" />-->
        <!--<sec:intercept-url pattern="/viewProducts**" access="ROLE_VENDORADMIN" />-->
        
        <sec:intercept-url pattern="/j_spring_security_check" access="IS_AUTHENTICATED_ANONYMOUSLY" method="GET"/>  
        <sec:intercept-url pattern="/**" access="ROLE_CUSTOMER,ROLE_ADMIN,ROLE_VENDORADMIN"/>
        
        <sec:form-login login-page="/login" default-target-url="/index" authentication-failure-url="/loginFail"/>
        <sec:logout delete-cookies="true" invalidate-session="true" logout-success-url="/"/>
    </sec:http>
    <sec:authentication-manager>
        <sec:authentication-provider>
            <sec:user-service>
                <sec:user name="test" password="test" authorities="ROLE_CUSTOMER"/>
            </sec:user-service>
        </sec:authentication-provider>
        <sec:authentication-provider >
            <sec:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select username,password, active=1 enabled from credential where username=?" authorities-by-username-query="select username, role as authority from credential where username=?"/>
            <sec:password-encoder ref="encoder" />
        </sec:authentication-provider>
    </sec:authentication-manager>
    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11" />
    </bean>
</beans>
